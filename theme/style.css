/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
/*!
Theme Name: _tw
Theme URI: https://underscoretw.com/
Description: A custom theme based on _tw
Version: 0.1.0
Author: underscoretw.com
Author URI: https://underscoretw.com/
Text Domain: _tw
Requires at least: 6.8
Requires PHP: 7.4
License: GNU General Public License v2 or later
License URI: LICENSE

This theme, like WordPress, is licensed under the GPL.
Use it to make something cool, have fun, and share what you've learned.

_tw is based on _tw https://underscoretw.com/, (C) 2021-2025 Greg Sullivan
_tw is distributed under the terms of the GNU GPL v2 or later.

_tw is based on Underscores https://underscores.me/ and Varia https://github.com/Automattic/themes/tree/master/varia, (C) 2012-2025 Automattic, Inc.
Underscores and Varia are distributed under the terms of the GNU GPL v2 or later.
*/
@layer properties;
:root, :host {
  --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
    'Noto Color Emoji';
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
		"Liberation Mono", "Courier New", monospace;
  --color-neutral-900: oklch(20.5% 0 0);
  --spacing: 0.25rem;
  --text-3xl: 1.875rem;
  --text-3xl--line-height: calc(2.25 / 1.875);
  --font-weight-extrabold: 800;
  --radius-xs: 0.125rem;
  --radius-sm: 0.25rem;
  --radius-md: 0.375rem;
  --radius-2xl: 1rem;
  --default-font-family: var(--font-sans);
  --default-mono-font-family: var(--font-mono);
  --color-background: var(--wp--preset--color--background);
  --color-foreground: var(--wp--preset--color--foreground);
  --color-primary: var(--wp--preset--color--primary);
  --color-secondary: var(--wp--preset--color--secondary);
  --color-tertiary: var(--wp--preset--color--tertiary);
  --container-content: var(--wp--style--global--content-size);
  --container-wide: var(--wp--style--global--wide-size);
  --font-display: display, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
		"Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --font-content: content, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
		"Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --text-step--1: clamp(0.5208rem, 0.3889rem + 0.6594vw, 0.9rem);
  --text-step-0: clamp(0.625rem, 0.4511rem + 0.8696vw, 1.125rem);
  --text-step-1: clamp(0.75rem, 0.5217rem + 1.1413vw, 1.4063rem);
  --text-step-2: clamp(0.9rem, 0.6016rem + 1.4918vw, 1.7578rem);
  --text-step-3: clamp(1.08rem, 0.6914rem + 1.9431vw, 2.1973rem);
  --text-step-4: clamp(1.296rem, 0.7914rem + 2.5228vw, 2.7466rem);
  --text-step-5: clamp(1.5552rem, 0.902rem + 3.2661vw, 3.4332rem);
  --text-step-6: clamp(1.8662rem, 1.0227rem + 4.2179vw, 4.2915rem);
  --spacing-2xs: clamp(0.3125rem, 0.2038rem + 0.5435vw, 0.625rem);
  --spacing-xs: clamp(0.5rem, 0.3478rem + 0.7609vw, 0.9375rem);
  --spacing-s: clamp(0.625rem, 0.4076rem + 1.087vw, 1.25rem);
  --spacing-m: clamp(0.9375rem, 0.6114rem + 1.6304vw, 1.875rem);
  --spacing-l: clamp(1.25rem, 0.8152rem + 2.1739vw, 2.5rem);
  --spacing-xl: clamp(1.875rem, 1.2228rem + 3.2609vw, 3.75rem);
  --spacing-2xl: clamp(2.5rem, 1.6304rem + 4.3478vw, 5rem);
  --spacing-3xl: clamp(3.75rem, 2.4457rem + 6.5217vw, 7.5rem);
  --spacing-s-m: clamp(0.625rem, 0.1902rem + 2.1739vw, 1.875rem);
  --spacing-m-l: clamp(0.9375rem, 0.394rem + 2.7174vw, 2.5rem);
  --spacing-xl-2xl: clamp(1.875rem, 0.788rem + 5.4348vw, 5rem);
}
@font-face {
  font-family: content;
  font-style: normal;
  font-display: swap;
  src: local(""),	url("fonts/Raleway-VariableFont_wght.woff2") format("woff2");
}
@font-face {
  font-family: display;
  font-style: normal;
  font-display: swap;
  font-weight: 900;
  src: local(""),	url("fonts/Raleway-VariableFont_wght.woff2") format("woff2");
}
*, ::after, ::before, ::backdrop, ::file-selector-button {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: 0 solid;
}
html, :host {
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  tab-size: 4;
  font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji');
  font-feature-settings: var(--default-font-feature-settings, normal);
  font-variation-settings: var(--default-font-variation-settings, normal);
  -webkit-tap-highlight-color: transparent;
}
hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}
h1, h2, h3, h4, h5, h6 {
  font-size: inherit;
  font-weight: inherit;
}
a {
  color: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}
b, strong {
  font-weight: bolder;
}
code, kbd, samp, pre {
  font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace);
  font-feature-settings: var(--default-mono-font-feature-settings, normal);
  font-variation-settings: var(--default-mono-font-variation-settings, normal);
  font-size: 1em;
}
small {
  font-size: 80%;
}
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}
:-moz-focusring {
  outline: auto;
}
progress {
  vertical-align: baseline;
}
summary {
  display: list-item;
}
ol, ul, menu {
  list-style: none;
}
img, svg, video, canvas, audio, iframe, embed, object {
  display: block;
  vertical-align: middle;
}
img, video {
  max-width: 100%;
  height: auto;
}
button, input, select, optgroup, textarea, ::file-selector-button {
  font: inherit;
  font-feature-settings: inherit;
  font-variation-settings: inherit;
  letter-spacing: inherit;
  color: inherit;
  border-radius: 0;
  background-color: transparent;
  opacity: 1;
}
:where(select:is([multiple], [size])) optgroup {
  font-weight: bolder;
}
:where(select:is([multiple], [size])) optgroup option {
  padding-inline-start: 20px;
}
::file-selector-button {
  margin-inline-end: 4px;
}
::placeholder {
  opacity: 1;
}
@supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
  ::placeholder {
    color: currentcolor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    ::placeholder {
      color: color-mix(in oklab, currentcolor 50%, transparent);
    }
  }
}
textarea {
  resize: vertical;
}
::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-date-and-time-value {
  min-height: 1lh;
  text-align: inherit;
}
::-webkit-datetime-edit {
  display: inline-flex;
}
::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}
::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
  padding-block: 0;
}
:-moz-ui-invalid {
  box-shadow: none;
}
button, input:where([type='button'], [type='reset'], [type='submit']), ::file-selector-button {
  appearance: button;
}
::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
  height: auto;
}
[hidden]:where(:not([hidden='until-found'])) {
  display: none !important;
}
:root {
  --bg-svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:svgjs='http://svgjs.dev/svgjs' viewBox='0 0 700 700' width='700' height='700'%3E%3Cdefs%3E%3ClinearGradient gradientTransform='rotate(-58, 0.5, 0.5)' x1='50%25' y1='0%25' x2='50%25' y2='100%25' id='gggrain-gradient2'%3E%3Cstop stop-color='rgba(255, 255, 255, 0.00)' stop-opacity='1' offset='-0%25'%3E%3C/stop%3E%3Cstop stop-color='rgba(255,255,255,0)' stop-opacity='0' offset='100%25'%3E%3C/stop%3E%3C/linearGradient%3E%3ClinearGradient gradientTransform='rotate(58, 0.5, 0.5)' x1='50%25' y1='0%25' x2='50%25' y2='100%25' id='gggrain-gradient3'%3E%3Cstop stop-color='rgb(255, 255, 255)' stop-opacity='1'%3E%3C/stop%3E%3Cstop stop-color='rgba(255,255,255,0)' stop-opacity='0' offset='100%25'%3E%3C/stop%3E%3C/linearGradient%3E%3Cfilter id='gggrain-filter' x='-20%25' y='-20%25' width='140%25' height='140%25' filterUnits='objectBoundingBox' primitiveUnits='userSpaceOnUse' color-interpolation-filters='sRGB'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.3' numOctaves='2' seed='2' stitchTiles='stitch' x='0%25' y='0%25' width='100%25' height='100%25' result='turbulence'%3E%3C/feTurbulence%3E%3CfeColorMatrix type='saturate' values='0' x='0%25' y='0%25' width='100%25' height='100%25' in='turbulence' result='colormatrix'%3E%3C/feColorMatrix%3E%3CfeComponentTransfer x='0%25' y='0%25' width='100%25' height='100%25' in='colormatrix' result='componentTransfer'%3E%3CfeFuncR type='linear' slope='3'%3E%3C/feFuncR%3E%3CfeFuncG type='linear' slope='3'%3E%3C/feFuncG%3E%3CfeFuncB type='linear' slope='3'%3E%3C/feFuncB%3E%3C/feComponentTransfer%3E%3CfeColorMatrix x='0%25' y='0%25' width='100%25' height='100%25' in='componentTransfer' result='colormatrix2' type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 24 -16'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg%3E%3Crect width='100%25' height='100%25' fill='%23ffffff'%3E%3C/rect%3E%3Crect width='100%25' height='100%25' fill='url(%23gggrain-gradient3)'%3E%3C/rect%3E%3Crect width='100%25' height='100%25' fill='url(%23gggrain-gradient2)'%3E%3C/rect%3E%3Crect width='100%25' height='100%25' fill='transparent' filter='url(%23gggrain-filter)' opacity='0.1' style='mix-blend-mode: exclusion'%3E%3C/rect%3E%3C/g%3E%3C/svg%3E");
}
#page {
  background-image: var(--bg-svg);
  background-repeat: repeat;
}
#content {
  background-image: var(--bg-svg);
  background-repeat: repeat;
  position: relative;
  z-index: 1;
}
body {
  background-color: var(--color-background);
  font-family: var(--font-content);
  color: var(--color-foreground);
  font-size: var(--text-step-0);
}
h1 {
  font-size: var(--text-step-6);
}
h2 {
  font-size: var(--text-step-5);
}
h3 {
  font-size: var(--text-step-4);
}
h4 {
  font-size: var(--text-step-3);
}
h1, h2, h3, h4 {
  max-inline-size: 25ch;
  font-family: var(--font-display);
  line-height: 1.5;
}
p, li, blockquote:not([class]) {
  max-inline-size: 65ch;
}
* .text-center > p, li, blockquote:not([class]) {
  max-inline-size: none;
}
blockquote {
  border-inline-start: 0.5rem solid var(--color-primary);
  padding: var(--spacing-m-l);
  font-size: var(--size-step-2);
}
blockquote > * + * {
  margin-block-start: var(--spacing-m-l);
}
blockquote :last-child {
  font-family: var(--font-base);
  font-style: normal;
  font-size: var(--size-step-1);
}
svg, .icon {
  inline-size: auto;
  height: var(--icon-size, 4ex);
  width: var(--icon-size, 4ex);
}
strong {
  font-weight: bolder;
}
hr {
  border: 0;
  height: 1px;
  width: 10%;
  margin-block: var(--spacing-m-l);
  margin-inline-start: 0;
  background-color: var(--color-bg-accent-2);
}
[role="list"] {
  padding: 0;
}
a {
  text-decoration-line: underline;
  color: currentcolor;
  text-decoration-thickness: 0.08em;
}
a:hover {
  text-decoration: none;
}
:focus-visible {
  outline: 3px solid;
  outline-offset: 0.3ch;
}
main:focus {
  outline: none;
}
::selection {
  background-color: var(--color-text);
  color: var(--color-bg);
}
.preload-transitions * {
  transition: none !important;
}
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }
  *,	::after,	::before {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    scroll-behavior: auto !important;
    transition-duration: 0.01ms !important;
  }
}
.page-title, .entry-title {
  margin-inline: auto;
  margin-bottom: calc(var(--spacing) * 6);
  max-width: var(--container-content);
  font-size: var(--text-3xl);
  line-height: var(--tw-leading, var(--text-3xl--line-height));
  --tw-font-weight: var(--font-weight-extrabold);
  font-weight: var(--font-weight-extrabold);
  color: var(--color-neutral-900);
}
.page-content > *, .entry-content > * {
  margin-inline: auto;
  max-width: var(--container-content);
}
.entry-content > .alignwide {
  max-width: var(--container-wide);
}
.entry-content > .alignfull {
  max-width: none;
}
.entry-content > .alignleft {
  float: left;
  margin-right: calc(var(--spacing) * 8);
}
.entry-content > .alignright {
  float: right;
  margin-left: calc(var(--spacing) * 8);
}
#primary * {
  color: yellow !important;
}
.btn {
  border-radius: var(--radius-md);
  padding: var(--spacing-xs);
  cursor: pointer;
  transition: background-color 0.5s ease-in-out;
}
.btn:hover, .btn:focus {
  color: var(--hover-text-color, var(--color-background));
  background-color: var(--hover-color, var(--color-tertiary));
}
.cta-about__img {
  object-fit: cover;
  border-radius: 10% 0% 10% 0%;
}
.divider svg {
  block-size: auto;
  width: 100vw;
  height: auto;
}
.faq {
  min-width: var(--faq-min-width, 45ch);
}
footer {
  position: sticky;
  bottom: 0;
  left: 0;
  z-index: 0;
}
.hero .header {
  max-width: 25ch;
}
.highlight svg {
  position: absolute;
  bottom: 0;
  left: 0;
  fill: var(--highlight-color, var(--color-secondary));
  opacity: 0.9;
  height: 30%;
  width: 100%;
  z-index: -1;
}
:is(.highlight svg):not([no-intersect]) {
  --motion-origin-translate-y: 100%;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
  animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
}
.highlight {
  position: relative;
  z-index: 0;
}
@keyframes growWidth {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}
.nav {
  display: flex;
  justify-content: space-between;
}
.nav__inner {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  gap: 0 1rem;
}
.nav__logo p {
  font-size: var(--text-step-2);
  font-family: display;
  max-width: 10ch;
}
.nav__logo img {
  display: block;
  max-width: 5rem;
  block-size: auto;
}
.nav ul {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 0.3rem 0.8rem;
  padding: 0;
}
.nav li {
  margin: 0.1rem;
}
.nav a {
  font-weight: 600;
  text-transform: uppercase;
  color: currentColor;
}
.nav a:hover {
  color: var(--wp--preset--color--secondary);
}
.has_sub_menu {
  position: relative;
}
.has_sub_menu_icon {
  transition: transform 0.5s ease-in-out;
}
.has_sub_menu:hover .has_sub_menu_icon {
  transform: rotate(180deg);
}
.has_sub_menu:focus-within .has_sub_menu_icon {
  transform: rotate(180deg);
}
.sub_menu {
  font-size: var(--text-step--1);
  background-color: var(--wp--preset--color--tertiary);
  color: var(--wp--preset--color--background);
  width: 100%;
  padding: var(--spacing-xs);
  border-radius: var(--radius-xs);
  position: absolute;
  top: calc(100% - 0.25rem);
  left: 50%;
  transform: translateX(-50%);
  transform: rotateX(-90deg) translateX(-50%);
  transform-origin: top center;
  opacity: 0.3;
  transition: 280ms all 120ms ease-out;
  z-index: 3;
}
.sub_menu li {
  padding: var(--spacing-2xs);
}
.has_sub_menu:focus-within .sub_menu {
  opacity: 1;
  transform: rotateX(0) translateX(-50%);
  visibility: visible;
}
.has_sub_menu:hover .sub_menu {
  opacity: 1;
  transform: rotateX(0) translateX(-50%);
  visibility: visible;
}
.burger-menu__trigger {
  display: none;
}
.burger-menu__bar, .burger-menu__bar::before, .burger-menu__bar::after {
  display: block;
  width: 24px;
  height: 3px;
  background: var(--wp--preset--color--foreground);
  border: 1px solid var(--wp--preset--color--foreground);
  position: absolute;
  border-radius: 3px;
  left: 50%;
  margin-left: -12px;
  transition: transform 350ms ease-in-out;
}
.burger-menu__bar {
  top: 50%;
  transform: translateY(-50%);
}
.burger-menu__bar::before, .burger-menu__bar::after {
  content: "";
}
.burger-menu__bar::before {
  top: -8px;
}
.burger-menu__bar::after {
  bottom: -8px;
}
.burger-menu[enabled="true"] .burger-menu__trigger {
  display: block;
  width: 2rem;
  height: 2rem;
  position: relative;
  z-index: 3;
  background: transparent;
  border: none;
  cursor: pointer;
}
.burger-menu[enabled="true"] .burger-menu__panel {
  position: absolute;
  top: 0;
  left: 0;
  padding: 5rem 1.5rem 2rem 1.5rem;
  width: 100%;
  height: 100%;
  visibility: hidden;
  opacity: 0;
  z-index: 2;
  background: var(--wp--preset--color--tertiary);
  color: var(--wp--preset--color--background);
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}
.burger-menu[enabled="true"] .nav ul {
  display: block;
}
.burger-menu[enabled="true"] .nav ul > * + * {
  margin-top: 2rem;
}
.burger-menu[enabled="true"] .nav li {
  font-size: var(--wp--preset--font-size--step-2);
}
.burger-menu[enabled="true"][status="open"] .burger-menu__panel {
  visibility: visible;
  opacity: 1;
  transition: opacity 400ms ease;
}
.burger-menu[enabled="true"][status="closed"] .burger-menu__panel > * {
  opacity: 0;
  transform: translateY(5rem);
}
.burger-menu[enabled="true"][status="open"] .burger-menu__panel > * {
  transform: translateY(0);
  opacity: 1;
  transition: transform 500ms cubic-bezier(0.17, 0.67, 0, 0.87) 700ms,	opacity 500ms ease 800ms;
}
.burger-menu[enabled="true"][status="open"] .burger-menu__bar::before {
  background: var(--wp--preset--color--background);
  border: 1px solid var(--wp--preset--color--background);
  top: 0;
  transform: rotate(45deg);
}
.burger-menu[enabled="true"][status="open"] .burger-menu__bar::after {
  background: var(--wp--preset--color--background);
  border: 1px solid var(--wp--preset--color--background);
  top: 0;
  transform: rotate(-45deg);
}
.burger-menu[enabled="true"][status="open"] .burger-menu__bar {
  background: transparent;
  border-color: transparent;
  transform: rotate(180deg);
}
.burger-menu[enabled="true"][status="open"] .has_sub_menu:has(.has_sub_menu_icon):hover .sub_menu {
  opacity: 1;
  transform: rotateX(0) translateX(50%) translateY(10%);
  visibility: visible;
  position: static;
}
.burger-menu[enabled="true"][status="open"] .has_sub_menu:has(.has_sub_menu_icon):hover .sub_menu {
  opacity: 1;
  transform: rotateX(0) translateX(50%) translateY(10%);
  visibility: visible;
  position: static;
}
.stars {
  --percent: calc(var(--rating) / 5 * 100%);
  font-size: var(--text-step--0);
  display: inline-block;
  line-height: 1;
}
.stars::before {
  content: "★★★★★";
  letter-spacing: 3px;
  background: linear-gradient(	90deg,	var(--color-background) var(--percent),	var(--color-foreground) var(--percent)	);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}
.reviews-snippet {
  background-image: var(--reviews-bg);
  background-repeat: no-repeat;
  background-size: cover;
}
.center {
  box-sizing: content-box;
  margin-inline: auto;
  max-inline-size: none;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.cluster {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space, var(--spacing-s));
  justify-content: flex-start;
  align-items: center;
}
.grid {
  display: grid;
  grid-gap: var(--spacing-m);
}
@supports (width: min(250px, 100%)) {
  .grid {
    grid-template-columns: repeat(auto-fit, minmax(min(250px, 100%), 1fr));
  }
}
.reel {
  display: flex;
  block-size: auto;
  overflow-x: auto;
  overflow-y: hidden;
  scrollbar-color: #fff #000;
}
.reel::-webkit-scrollbar {
  block-size: 1rem;
}
.reel::-webkit-scrollbar-track {
  background-color: #000;
}
.reel::-webkit-scrollbar-thumb {
  background-color: #000;
  background-image: linear-gradient(	#000 0,	#000 0.25rem,	#fff 0.25rem,	#fff 0.75rem,	#000 0.75rem	);
}
.reel > * {
  flex: 0 0 auto;
}
.reel > img {
  block-size: 100%;
  flex-basis: auto;
  width: auto;
}
.reel > * + * {
  margin-inline-start: 1rem;
}
.reel.overflowing {
  padding-block-end: 1rem;
}
.sidebar {
  display: flex;
  flex-wrap: wrap;
  gap: var(--sidebar-space, var(--spacing-l));
}
.sidebar > :first-child {
  flex-basis: 0;
  flex-grow: 999;
  min-inline-size: var(--sidebar-content, 30%);
}
.sidebar > :last-child {
  flex-grow: 1;
  flex-basis: var(--sidebar-basis, 0);
}
.stack {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}
.stack > * {
  margin-block: 0;
}
.stack > * + * {
  margin-block-start: var(--space, var(--spacing-s));
}
.switcher {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-m);
}
.switcher > * {
  flex-grow: 1;
  flex-basis: calc((30rem - 100%) * 999);
}
.switcher > :nth-last-child(n + 5), .switcher > :nth-last-child(n + 5) ~ * {
  flex-basis: 100%;
}
.wrapper {
  width: 95vw;
  width: clamp(10rem, 95vw, 90rem);
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}
.gutter {
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}
.visible {
  visibility: visible;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.mx-auto {
  margin-inline: auto;
}
.prose {
  color: var(--tw-prose-body);
  max-width: none;
}
.prose :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where([class~="lead"],[class~="is-style-lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}
.prose :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.prose :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.prose :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}
.prose :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}
.prose :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1;
  margin-top: 3em;
  margin-bottom: 3em;
  border-bottom: none;
}
.prose :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
}
.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: open-quote;
}
.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.prose :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}
.prose :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.prose :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}
.prose :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.prose :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.prose :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: "`";
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: "`";
}
.prose :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}
.prose :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: none;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: none;
}
.prose :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.prose :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.prose :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: baseline;
}
.prose :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}
.prose :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: top;
}
.prose :where(th,td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  text-align: start;
}
.prose :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.prose {
  --tw-prose-body: oklch(37.3% 0.034 259.733);
  --tw-prose-headings: oklch(21% 0.034 264.665);
  --tw-prose-lead: oklch(44.6% 0.03 256.802);
  --tw-prose-links: oklch(21% 0.034 264.665);
  --tw-prose-bold: oklch(21% 0.034 264.665);
  --tw-prose-counters: oklch(55.1% 0.027 264.364);
  --tw-prose-bullets: oklch(87.2% 0.01 258.338);
  --tw-prose-hr: oklch(92.8% 0.006 264.531);
  --tw-prose-quotes: oklch(21% 0.034 264.665);
  --tw-prose-quote-borders: oklch(92.8% 0.006 264.531);
  --tw-prose-captions: oklch(55.1% 0.027 264.364);
  --tw-prose-kbd: oklch(21% 0.034 264.665);
  --tw-prose-kbd-shadows: NaN NaN NaN;
  --tw-prose-code: oklch(21% 0.034 264.665);
  --tw-prose-pre-code: oklch(92.8% 0.006 264.531);
  --tw-prose-pre-bg: oklch(27.8% 0.033 256.848);
  --tw-prose-th-borders: oklch(87.2% 0.01 258.338);
  --tw-prose-td-borders: oklch(92.8% 0.006 264.531);
  --tw-prose-invert-body: oklch(87.2% 0.01 258.338);
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: oklch(70.7% 0.022 261.325);
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: oklch(70.7% 0.022 261.325);
  --tw-prose-invert-bullets: oklch(44.6% 0.03 256.802);
  --tw-prose-invert-hr: oklch(37.3% 0.034 259.733);
  --tw-prose-invert-quotes: oklch(96.7% 0.003 264.542);
  --tw-prose-invert-quote-borders: oklch(37.3% 0.034 259.733);
  --tw-prose-invert-captions: oklch(70.7% 0.022 261.325);
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: oklch(87.2% 0.01 258.338);
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: oklch(44.6% 0.03 256.802);
  --tw-prose-invert-td-borders: oklch(37.3% 0.034 259.733);
  font-size: 1rem;
  line-height: 1.75;
}
.prose :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.prose :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(ul ul,ul ol,ol ul,ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}
.prose :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}
.prose :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}
.prose :where(tbody td,tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.prose :where(tbody td:first-child,tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}
.prose :where(tbody td:last-child,tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}
.prose :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}
.prose :where(blockquote > cite):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-body);
  font-style: normal;
  font-weight: 400;
}
.prose :where(blockquote > cite):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: "\2014";
}
.prose :where(table.has-fixed-layout):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  table-layout: fixed;
  width: 100%;
}
.mb-xs {
  margin-bottom: var(--spacing-xs);
}
.block {
  display: block;
}
.contents {
  display: contents;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.max-w-none {
  max-width: none;
}
.motion-preset-fade {
  --motion-origin-opacity: 0;
  --motion-duration: 500ms;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
  animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
}
.motion-translate-y-in-100 {
  --motion-origin-translate-y: 100%;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
  animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
}
.items-center {
  align-items: center;
}
.items-start {
  align-items: flex-start;
}
.justify-center {
  justify-content: center;
}
.gap-s {
  gap: var(--spacing-s);
}
.overflow-hidden {
  overflow: hidden;
}
.rounded-2xl {
  border-radius: var(--radius-2xl);
}
.rounded-sm {
  border-radius: var(--radius-sm);
}
.prose .wp-block-table td {
  border: 0;
}
.prose .wp-block-table th {
  border: 0;
}
.prose .wp-block-table thead {
  border-color: var(--tw-prose-th-borders);
}
.prose .wp-block-table tfoot {
  border-color: var(--tw-prose-th-borders);
}
.prose .wp-block-table thead {
  border-bottom-width: 1px;
}
.prose .wp-block-table tfoot {
  border-top-width: 1px;
}
.bg-background {
  background-color: var(--color-background);
}
.bg-foreground {
  background-color: var(--color-foreground);
}
.bg-secondary {
  background-color: var(--color-secondary);
}
.bg-tertiary {
  background-color: var(--color-tertiary);
}
.p-l {
  padding: var(--spacing-l);
}
.p-m {
  padding: var(--spacing-m);
}
.py-2xl {
  padding-block: var(--spacing-2xl);
}
.py-3xl {
  padding-block: var(--spacing-3xl);
}
.py-l {
  padding-block: var(--spacing-l);
}
.py-m-l {
  padding-block: var(--spacing-m-l);
}
.py-s {
  padding-block: var(--spacing-s);
}
.py-s-m {
  padding-block: var(--spacing-s-m);
}
.py-xl {
  padding-block: var(--spacing-xl);
}
.py-xl-2xl {
  padding-block: var(--spacing-xl-2xl);
}
.pt-s-m {
  padding-top: var(--spacing-s-m);
}
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.font-content {
  font-family: var(--font-content);
}
.font-display {
  font-family: var(--font-display);
}
.text-step-0 {
  font-size: var(--text-step-0);
}
.text-step-1 {
  font-size: var(--text-step-1);
}
.text-step-3 {
  font-size: var(--text-step-3);
}
.text-step-5 {
  font-size: var(--text-step-5);
}
.break-words {
  overflow-wrap: break-word;
}
.text-background {
  color: var(--color-background);
}
.text-foreground {
  color: var(--color-foreground);
}
.uppercase {
  text-transform: uppercase;
}
.no-underline {
  text-decoration-line: none;
}
.underline {
  text-decoration-line: underline;
}
.outline-2 {
  outline-style: var(--tw-outline-style);
  outline-width: 2px;
}
.outline-primary {
  outline-color: var(--color-primary);
}
.outline-secondary {
  outline-color: var(--color-secondary);
}
.outline-tertiary {
  outline-color: var(--color-tertiary);
}
.content-none {
  --tw-content: none;
  content: none;
}
.prose-neutral {
  --tw-prose-body: oklch(37.1% 0 0);
  --tw-prose-headings: oklch(20.5% 0 0);
  --tw-prose-lead: oklch(43.9% 0 0);
  --tw-prose-links: oklch(20.5% 0 0);
  --tw-prose-bold: oklch(20.5% 0 0);
  --tw-prose-counters: oklch(55.6% 0 0);
  --tw-prose-bullets: oklch(87% 0 0);
  --tw-prose-hr: oklch(92.2% 0 0);
  --tw-prose-quotes: oklch(20.5% 0 0);
  --tw-prose-quote-borders: oklch(92.2% 0 0);
  --tw-prose-captions: oklch(55.6% 0 0);
  --tw-prose-kbd: oklch(20.5% 0 0);
  --tw-prose-kbd-shadows: NaN NaN NaN;
  --tw-prose-code: oklch(20.5% 0 0);
  --tw-prose-pre-code: oklch(92.2% 0 0);
  --tw-prose-pre-bg: oklch(26.9% 0 0);
  --tw-prose-th-borders: oklch(87% 0 0);
  --tw-prose-td-borders: oklch(92.2% 0 0);
  --tw-prose-invert-body: oklch(87% 0 0);
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: oklch(70.8% 0 0);
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: oklch(70.8% 0 0);
  --tw-prose-invert-bullets: oklch(43.9% 0 0);
  --tw-prose-invert-hr: oklch(37.1% 0 0);
  --tw-prose-invert-quotes: oklch(97% 0 0);
  --tw-prose-invert-quote-borders: oklch(37.1% 0 0);
  --tw-prose-invert-captions: oklch(70.8% 0 0);
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: oklch(87% 0 0);
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: oklch(43.9% 0 0);
  --tw-prose-invert-td-borders: oklch(37.1% 0 0);
}
@media (width >= 48rem) {
  .md\:bg-tertiary {
    background-color: var(--color-tertiary);
  }
}
@media (width >= 48rem) {
  .md\:p-s {
    padding: var(--spacing-s);
  }
}
@media (width >= 48rem) {
  .md\:text-step-4 {
    font-size: var(--text-step-4);
  }
}
@media (width >= 64rem) {
  .lg\:justify-center {
    justify-content: center;
  }
}
@media (width >= 64rem) {
  .lg\:text-center {
    text-align: center;
  }
}
@media (width >= 64rem) {
  .lg\:text-step-5 {
    font-size: var(--text-step-5);
  }
}
@media (width >= 96rem) {
  .\32 xl\:text-step-6 {
    font-size: var(--text-step-6);
  }
}
.intersect\:motion-preset-fade:not([no-intersect]) {
  --motion-origin-opacity: 0;
  --motion-duration: 500ms;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
  animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
}
.intersect\:motion-translate-x-in-100:not([no-intersect]) {
  --motion-origin-translate-x: 100%;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
  animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
}
.intersect\:motion-translate-x-in-\[-100\]:not([no-intersect]) {
  --motion-origin-translate-x: -100;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
  animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
}
.intersect\:motion-translate-y-in-100:not([no-intersect]) {
  --motion-origin-translate-y: 100%;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
  animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
}
.prose-a\:text-primary :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  color: var(--color-primary);
}
@layer base {
  @property --motion-bounce {
    syntax: "*";
    inherits: false;
    initial-value: linear(0, 0.004, 0.016, 0.035, 0.063, 0.098, 0.141 13.6%, 0.25, 0.391, 0.563, 0.765,1, 0.891 40.9%, 0.848, 0.813, 0.785, 0.766, 0.754, 0.75, 0.754, 0.766, 0.785,0.813, 0.848, 0.891 68.2%, 1 72.7%, 0.973, 0.953, 0.941, 0.938, 0.941, 0.953,0.973, 1, 0.988, 0.984, 0.988, 1);
  }
  @property --motion-spring-smooth {
    syntax: "*";
    inherits: false;
    initial-value: linear(0, 0.001 0.44%, 0.0045 0.94%, 0.0195 2.03%, 0.0446 3.19%, 0.0811 4.5%, 0.1598 6.82%, 0.3685 12.34%, 0.4693 15.17%, 0.5663, 0.6498 21.27%, 0.7215 24.39%, 0.7532 25.98%, 0.7829 27.65%, 0.8105, 0.8349 31.14%, 0.8573 32.95%, 0.8776 34.84%, 0.8964 36.87%, 0.9136 39.05%, 0.929 41.37%, 0.9421 43.77%, 0.9537 46.38%, 0.9636 49.14%, 0.9789 55.31%, 0.9888 62.35%, 0.9949 71.06%, 0.9982 82.52%, 0.9997 99.94%);
  }
  @property --motion-spring-snappy {
    syntax: "*";
    inherits: false;
    initial-value: linear(0, 0.0014, 0.0053 1.02%, 0.0126, 0.0227 2.18%, 0.0517 3.41%, 0.094 4.79%, 0.1865 7.26%, 0.4182 12.77%, 0.5246 15.46%, 0.6249, 0.7112, 0.7831 23.95%, 0.8146 25.4%, 0.844, 0.8699 28.45%, 0.8935, 0.9139 31.64%, 0.932, 0.9473, 0.9601 36.65%, 0.9714 38.47%, 0.9808 40.35%, 0.9948 44.49%, 1.0031 49.43%, 1.0057 53.35%, 1.0063 58.14%, 1.0014 80.78%, 1.0001 99.94%);
  }
  @property --motion-spring-bouncy {
    syntax: "*";
    inherits: false;
    initial-value: linear(0, 0.0018, 0.0069, 0.0151 1.74%, 0.0277 2.4%, 0.062 3.7%, 0.1115 5.15%, 0.2211 7.77%, 0.4778 13.21%, 0.5912 15.75%, 0.6987 18.44%, 0.7862 20.98%, 0.861 23.59%, 0.8926, 0.9205, 0.945 27.51%, 0.9671 28.89%, 0.9868, 1.003 31.79%, 1.0224 34.11%, 1.0358 36.58%, 1.0436 39.27%, 1.046 42.31%, 1.0446 44.71%, 1.0406 47.47%, 1.0118 61.84%, 1.0027 69.53%, 0.9981 80.49%, 0.9991 99.94%);
  }
  @property --motion-spring-bouncier {
    syntax: "*";
    inherits: false;
    initial-value: linear(0, 0.0023, 0.0088, 0.0194 1.59%, 0.035 2.17%, 0.078 3.33%, 0.1415 4.64%, 0.2054 5.75%, 0.2821 6.95%, 0.5912 11.45%, 0.7205 13.43%, 0.8393 15.45%, 0.936 17.39%, 0.9778, 1.015, 1.0477, 1.0759, 1.0998 22.22%, 1.1203, 1.1364, 1.1484 25.26%, 1.1586 26.61%, 1.1629 28.06%, 1.1613 29.56%, 1.1537 31.2%, 1.1434 32.6%, 1.1288 34.19%, 1.0508 41.29%, 1.0174 44.87%, 1.0025 46.89%, 0.9911 48.87%, 0.9826 50.9%, 0.9769 53.03%, 0.9735 56.02%, 0.9748 59.45%, 0.9964 72.64%, 1.0031 79.69%, 1.0042 86.83%, 1.0008 99.97%);
  }
  @property --motion-spring-bounciest {
    syntax: "*";
    inherits: false;
    initial-value: linear(0, 0.0032, 0.0131, 0.0294, 0.0524, 0.0824, 0.1192 1.54%, 0.2134 2.11%, 0.3102 2.59%, 0.4297 3.13%, 0.8732 4.95%, 1.0373, 1.1827 6.36%, 1.2972 7.01%, 1.3444, 1.3859, 1.4215, 1.4504, 1.4735, 1.4908, 1.5024, 1.5084 9.5%, 1.5091, 1.5061, 1.4993, 1.4886, 1.4745, 1.4565 11.11%, 1.4082 11.7%, 1.3585 12.2%, 1.295 12.77%, 1.0623 14.64%, 0.9773, 0.9031 16.08%, 0.8449 16.73%, 0.8014, 0.7701 17.95%, 0.7587, 0.7501, 0.7443, 0.7412 19.16%, 0.7421 19.68%, 0.7508 20.21%, 0.7672 20.77%, 0.7917 21.37%, 0.8169 21.87%, 0.8492 22.43%, 0.9681 24.32%, 1.0114, 1.0492 25.75%, 1.0789 26.41%, 1.1008, 1.1167, 1.1271, 1.1317 28.81%, 1.1314, 1.1271 29.87%, 1.1189 30.43%, 1.1063 31.03%, 1.0769 32.11%, 0.9941 34.72%, 0.9748 35.43%, 0.9597 36.09%, 0.9487, 0.9407, 0.9355, 0.933 38.46%, 0.9344 39.38%, 0.9421 40.38%, 0.9566 41.5%, 0.9989 44.12%, 1.0161 45.37%, 1.029 46.75%, 1.0341 48.1%, 1.0335 49.04%, 1.0295 50.05%, 1.0221 51.18%, 0.992 55.02%, 0.9854 56.38%, 0.9827 57.72%, 0.985 59.73%, 1.004 64.67%, 1.0088 67.34%, 1.0076 69.42%, 0.9981 74.28%, 0.9956 76.85%, 0.9961 79.06%, 1.0023 86.46%, 0.999 95.22%, 0.9994 100%);
  }
  @property --motion-origin-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 100%;
  }
  @property --motion-origin-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 100%;
  }
  @property --motion-origin-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0%;
  }
  @property --motion-origin-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0%;
  }
  @property --motion-origin-rotate {
    syntax: "*";
    inherits: false;
    initial-value: 0deg;
  }
  @property --motion-origin-blur {
    syntax: "*";
    inherits: false;
    initial-value: 0px;
  }
  @property --motion-origin-grayscale {
    syntax: "*";
    inherits: false;
    initial-value: 0%;
  }
  @property --motion-origin-opacity {
    syntax: "*";
    inherits: false;
    initial-value: 100%;
  }
  @property --motion-origin-background-color {
    syntax: "*";
    inherits: false;
  }
  @property --motion-origin-text-color {
    syntax: "*";
    inherits: false;
  }
  @property --motion-end-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 100%;
  }
  @property --motion-end-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 100%;
  }
  @property --motion-end-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0%;
  }
  @property --motion-end-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0%;
  }
  @property --motion-end-rotate {
    syntax: "*";
    inherits: false;
    initial-value: 0deg;
  }
  @property --motion-end-blur {
    syntax: "*";
    inherits: false;
    initial-value: 0px;
  }
  @property --motion-end-grayscale {
    syntax: "*";
    inherits: false;
    initial-value: 0%;
  }
  @property --motion-end-opacity {
    syntax: "*";
    inherits: false;
    initial-value: 100%;
  }
  @property --motion-end-background-color {
    syntax: "*";
    inherits: false;
  }
  @property --motion-end-text-color {
    syntax: "*";
    inherits: false;
  }
  @property --motion-loop-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 100%;
  }
  @property --motion-loop-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 100%;
  }
  @property --motion-loop-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0%;
  }
  @property --motion-loop-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0%;
  }
  @property --motion-loop-rotate {
    syntax: "*";
    inherits: false;
    initial-value: 0deg;
  }
  @property --motion-loop-blur {
    syntax: "*";
    inherits: false;
    initial-value: 0px;
  }
  @property --motion-loop-grayscale {
    syntax: "*";
    inherits: false;
    initial-value: 0%;
  }
  @property --motion-loop-opacity {
    syntax: "*";
    inherits: false;
    initial-value: 100%;
  }
  @property --motion-loop-background-color {
    syntax: "*";
    inherits: false;
  }
  @property --motion-loop-text-color {
    syntax: "*";
    inherits: false;
  }
  @property --motion-duration {
    syntax: "*";
    inherits: false;
    initial-value: 700ms;
  }
  @property --motion-timing {
    syntax: "*";
    inherits: false;
    initial-value: cubic-bezier(.165, .84, .44, 1);
  }
  @property --motion-perceptual-duration-multiplier {
    syntax: "*";
    inherits: false;
    initial-value: 1;
  }
  @property --motion-delay {
    syntax: "*";
    inherits: false;
    initial-value: 0ms;
  }
  @property --motion-loop-count {
    syntax: "*";
    inherits: false;
    initial-value: infinite;
  }
  @property --motion-scale-in-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-translate-in-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-rotate-in-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-filter-in-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-opacity-in-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-background-color-in-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-text-color-in-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-scale-out-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-translate-out-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-rotate-out-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-filter-out-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-opacity-out-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-background-color-out-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-text-color-out-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-scale-loop-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-translate-loop-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-rotate-loop-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-filter-loop-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-opacity-loop-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-background-color-loop-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
  @property --motion-text-color-loop-animation {
    syntax: "*";
    inherits: false;
    initial-value: none;
  }
}
@layer base {
  @media screen and (prefers-reduced-motion: no-preference) {
    @keyframes motion-scale-in {
      0% {
        scale: var(--motion-origin-scale-x) var(--motion-origin-scale-y);
      }
      100% {
        scale: 1 1;
      }
    }
    @keyframes motion-scale-out {
      0% {
        scale: 1 1;
      }
      100% {
        scale: var(--motion-end-scale-x) var(--motion-end-scale-y);
      }
    }
    @keyframes motion-scale-loop-mirror {
      0%, 100% {
        scale: 1 1;
      }
      50% {
        scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
      }
    }
    @keyframes motion-scale-loop-reset {
      0% {
        scale: 1 1;
      }
      100% {
        scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
      }
    }
    @keyframes motion-translate-in {
      0% {
        translate: var(--motion-origin-translate-x) var(--motion-origin-translate-y);
      }
      100% {
        translate: 0 0;
      }
    }
    @keyframes motion-translate-out {
      0% {
        translate: 0 0;
      }
      100% {
        translate: var(--motion-end-translate-x) var(--motion-end-translate-y);
      }
    }
    @keyframes motion-translate-loop-mirror {
      0%, 100% {
        translate: 0 0;
      }
      50% {
        translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
      }
    }
    @keyframes motion-translate-loop-reset {
      0% {
        translate: 0 0;
      }
      100% {
        translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
      }
    }
    @keyframes motion-rotate-in {
      0% {
        rotate: var(--motion-origin-rotate);
      }
      100% {
        rotate: 0;
      }
    }
    @keyframes motion-rotate-out {
      0% {
        rotate: 0;
      }
      100% {
        rotate: var(--motion-end-rotate);
      }
    }
    @keyframes motion-rotate-loop-mirror {
      0%, 100% {
        rotate: 0deg;
      }
      50% {
        rotate: var(--motion-loop-rotate);
      }
    }
    @keyframes motion-rotate-loop-reset {
      100% {
        rotate: var(--motion-loop-rotate);
      }
    }
  }
  @keyframes motion-filter-in {
    0% {
      filter: blur(var(--motion-origin-blur)) grayscale(var(--motion-origin-grayscale));
    }
    100% {
      filter: blur(0) grayscale(0);
    }
  }
  @keyframes motion-filter-out {
    0% {
      filter: blur(0) grayscale(0);
    }
    100% {
      filter: blur(var(--motion-end-blur)) grayscale(var(--motion-end-grayscale));
    }
  }
  @keyframes motion-filter-loop-mirror {
    0%, 100% {
      filter: blur(0) grayscale(0);
    }
    50% {
      filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
    }
  }
  @keyframes motion-filter-loop-reset {
    0% {
      filter: blur(0) grayscale(0);
    }
    100% {
      filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
    }
  }
  @keyframes motion-opacity-in {
    0% {
      opacity: var(--motion-origin-opacity);
    }
  }
  @keyframes motion-opacity-out {
    100% {
      opacity: var(--motion-end-opacity);
    }
  }
  @keyframes motion-opacity-loop-mirror {
    50% {
      opacity: var(--motion-loop-opacity);
    }
  }
  @keyframes motion-opacity-loop-reset {
    100% {
      opacity: var(--motion-loop-opacity);
    }
  }
  @keyframes motion-background-color-in {
    0% {
      background-color: var(--motion-origin-background-color);
    }
  }
  @keyframes motion-background-color-out {
    100% {
      background-color: var(--motion-end-background-color);
    }
  }
  @keyframes motion-background-color-loop-mirror {
    50% {
      background-color: var(--motion-loop-background-color);
    }
  }
  @keyframes motion-background-color-loop-reset {
    100% {
      background-color: var(--motion-loop-background-color);
    }
  }
  @keyframes motion-text-color-in {
    0% {
      color: var(--motion-origin-text-color);
    }
  }
  @keyframes motion-text-color-out {
    100% {
      color: var(--motion-end-text-color);
    }
  }
  @keyframes motion-text-color-loop-mirror {
    50% {
      color: var(--motion-loop-text-color);
    }
  }
  @keyframes motion-text-color-loop-reset {
    100% {
      color: var(--motion-loop-text-color);
    }
  }
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-font-weight: initial;
      --tw-outline-style: solid;
    }
  }
}
